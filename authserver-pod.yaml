apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-10-23T21:24:25Z"
  generateName: chaos-litmus-auth-server-774d5f584c-
  generation: 1
  labels:
    app.kubernetes.io/component: litmus-auth-server
    app.kubernetes.io/instance: chaos-litmus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: litmus
    app.kubernetes.io/part-of: litmus
    app.kubernetes.io/version: 3.22.0
    helm.sh/chart: litmus-3.22.0
    litmuschaos.io/version: 3.22.0
    pod-template-hash: 774d5f584c
  name: chaos-litmus-auth-server-774d5f584c-j7sdn
  namespace: litmus
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: chaos-litmus-auth-server-774d5f584c
    uid: b27bd7bf-d70b-4c9e-a151-5bba5bd39784
  resourceVersion: "28512"
  uid: cb89961a-74af-4f6d-83a1-ff8e4b90a83a
spec:
  automountServiceAccountToken: false
  containers:
  - env:
    - name: DB_PASSWORD
      value: "1234"
    - name: DB_USER
      value: root
    - name: LITMUS_GQL_GRPC_ENDPOINT
      value: chaos-litmus-server-service
    - name: LITMUS_GQL_GRPC_PORT
      value: "8000"
    - name: ENABLE_INTERNAL_TLS
      value: "false"
    - name: REST_PORT
      value: "3000"
    - name: GRPC_PORT
      value: "3030"
    - name: ALLOWED_ORIGINS
      value: .*
    - name: HTTP_PROXY
    - name: HTTPS_PROXY
    - name: NO_PROXY
    envFrom:
    - secretRef:
        name: chaos-litmus-admin-secret
    - configMapRef:
        name: chaos-litmus-admin-config
    image: litmuschaos.docker.scarf.sh/litmuschaos/litmusportal-auth-server:3.22.0
    imagePullPolicy: Always
    name: auth-server
    ports:
    - containerPort: 3000
      name: auth-server
      protocol: TCP
    - containerPort: 3030
      name: auth-rpc-server
      protocol: TCP
    resources:
      limits:
        cpu: 550m
        ephemeral-storage: 1Gi
        memory: 712Mi
      requests:
        cpu: 225m
        ephemeral-storage: 500Mi
        memory: 250Mi
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 2000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
  - args:
    - until  [[ $(mongosh -u ${DB_USER} -p ${DB_PASSWORD} ${DB_SERVER} --eval 'rs.status()'
      | grep 'ok' | wc -l) -eq 1 ]]; do sleep 5; echo 'Waiting for the MongoDB to
      be ready...'; done; echo 'Connection with MongoDB established'
    command:
    - /bin/bash
    - -c
    env:
    - name: DB_PASSWORD
      value: "1234"
    - name: DB_USER
      value: root
    - name: DB_SERVER
      valueFrom:
        configMapKeyRef:
          key: DB_SERVER
          name: chaos-litmus-admin-config
    image: litmuschaos.docker.scarf.sh/litmuschaos/mongo:6
    imagePullPolicy: Always
    name: wait-for-mongodb
    resources:
      limits:
        cpu: 250m
        ephemeral-storage: 1Gi
        memory: 512Mi
      requests:
        cpu: 25m
        ephemeral-storage: 500Mi
        memory: 150Mi
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T21:24:35Z"
    observedGeneration: 1
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T21:24:25Z"
    message: 'containers with incomplete status: [wait-for-mongodb]'
    observedGeneration: 1
    reason: ContainersNotInitialized
    status: "False"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T21:24:25Z"
    message: 'containers with unready status: [auth-server]'
    observedGeneration: 1
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T21:24:25Z"
    message: 'containers with unready status: [auth-server]'
    observedGeneration: 1
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-10-23T21:24:25Z"
    observedGeneration: 1
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: litmuschaos.docker.scarf.sh/litmuschaos/litmusportal-auth-server:3.22.0
    imageID: ""
    lastState: {}
    name: auth-server
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: PodInitializing
  hostIP: 192.168.49.2
  hostIPs:
  - ip: 192.168.49.2
  initContainerStatuses:
  - allocatedResources:
      cpu: 25m
      ephemeral-storage: 500Mi
      memory: 150Mi
    containerID: docker://4d0e2d82e3e95892bf5699941435dfb87dd2db92023730cc4b1c5d21fa6a2238
    image: litmuschaos.docker.scarf.sh/litmuschaos/mongo:6
    imageID: docker-pullable://litmuschaos.docker.scarf.sh/litmuschaos/mongo@sha256:8f6a98f913be5227347e2ac66a707635652e8bc6ddbc682ab2b4db568acb9c0c
    lastState: {}
    name: wait-for-mongodb
    ready: false
    resources:
      limits:
        cpu: 250m
        ephemeral-storage: 1Gi
        memory: 512Mi
      requests:
        cpu: 25m
        ephemeral-storage: 500Mi
        memory: 150Mi
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-10-23T21:24:35Z"
  observedGeneration: 1
  phase: Pending
  podIP: 10.244.0.248
  podIPs:
  - ip: 10.244.0.248
  qosClass: Burstable
  startTime: "2025-10-23T21:24:25Z"
